# [File generated by the OpenScop Library 0.9.2]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 4 0 0 0 2

# Parameters are provided
1
<strings>
_PB_M _PB_N
</strings>

# Number of statements
9

# =============================================== Statement 1
# Number of relations describing the statement:
3

# ----------------------------------------------  1.1 Domain
DOMAIN
3 5 1 0 0 2
# e/i|  j |_PB. _PB.|  1  
   1    1    0    0    0    ## j >= 0
   1   -1    1    0   -1    ## -j+_PB_M-1 >= 0
   1    0    1    0   -1    ## _PB_M-1 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
3 8 3 1 0 2
# e/i| c1   c2   c3 |  j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    1    0    0    0    ## c2 == j
   0    0    0   -1    0    0    0    0    ## c3 == 0

# ----------------------------------------------  1.3 Access
WRITE
2 7 2 1 0 2
# e/i| Arr  [1]|  j |_PB. _PB.|  1  
   0   -1    0    0    0    0    3    ## Arr == mean
   0    0   -1    1    0    0    0    ## [1] == j

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
j
# Statement body expression
mean[j] = SCALAR_VAL(0.0);
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
5

# ----------------------------------------------  2.1 Domain
DOMAIN
6 6 2 0 0 2
# e/i|  j    i |_PB. _PB.|  1  
   1    1    0    0    0    0    ## j >= 0
   1   -1    0    1    0   -1    ## -j+_PB_M-1 >= 0
   1    0    0    1    0   -1    ## _PB_M-1 >= 0
   1    0    1    0    0    0    ## i >= 0
   1    0   -1    0    1   -1    ## -i+_PB_N-1 >= 0
   1    0    0    0    1   -1    ## _PB_N-1 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  j    i |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == j
   0    0    0   -1    0    0    0    0    0    0    1    ## c3 == 1
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == i
   0    0    0    0    0   -1    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  2.3 Access
READ
2 8 2 2 0 2
# e/i| Arr  [1]|  j    i |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    3    ## Arr == mean
   0    0   -1    1    0    0    0    0    ## [1] == j

WRITE
2 8 2 2 0 2
# e/i| Arr  [1]|  j    i |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    3    ## Arr == mean
   0    0   -1    1    0    0    0    0    ## [1] == j

READ
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  j    i |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    7    ## Arr == data
   0    0   -1    0    0    1    0    0    0    ## [1] == i
   0    0    0   -1    1    0    0    0    0    ## [2] == j

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
j i
# Statement body expression
mean[j] += data[i][j];
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
5

# ----------------------------------------------  3.1 Domain
DOMAIN
3 5 1 0 0 2
# e/i|  j |_PB. _PB.|  1  
   1    1    0    0    0    ## j >= 0
   1   -1    1    0   -1    ## -j+_PB_M-1 >= 0
   1    0    1    0   -1    ## _PB_M-1 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
3 8 3 1 0 2
# e/i| c1   c2   c3 |  j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    1    0    0    0    ## c2 == j
   0    0    0   -1    0    0    0    2    ## c3 == 2

# ----------------------------------------------  3.3 Access
READ
2 7 2 1 0 2
# e/i| Arr  [1]|  j |_PB. _PB.|  1  
   0   -1    0    0    0    0    3    ## Arr == mean
   0    0   -1    1    0    0    0    ## [1] == j

WRITE
2 7 2 1 0 2
# e/i| Arr  [1]|  j |_PB. _PB.|  1  
   0   -1    0    0    0    0    3    ## Arr == mean
   0    0   -1    1    0    0    0    ## [1] == j

READ
1 6 1 1 0 2
# e/i| Arr|  j |_PB. _PB.|  1  
   0   -1    0    0    0    8    ## Arr == float_n

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
j
# Statement body expression
mean[j] /= float_n;
</body>

# =============================================== Statement 4
# Number of relations describing the statement:
5

# ----------------------------------------------  4.1 Domain
DOMAIN
6 6 2 0 0 2
# e/i|  i    j |_PB. _PB.|  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    0    1   -1    ## -i+_PB_N-1 >= 0
   1    0    0    0    1   -1    ## _PB_N-1 >= 0
   1    0    1    0    0    0    ## j >= 0
   1    0   -1    1    0   -1    ## -j+_PB_M-1 >= 0
   1    0    0    1    0   -1    ## _PB_M-1 >= 0

# ----------------------------------------------  4.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  4.3 Access
READ
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    7    ## Arr == data
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

WRITE
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    7    ## Arr == data
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

READ
2 8 2 2 0 2
# e/i| Arr  [1]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    3    ## Arr == mean
   0    0   -1    0    1    0    0    0    ## [1] == j

# ----------------------------------------------  4.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
data[i][j] -= mean[j];
</body>

# =============================================== Statement 5
# Number of relations describing the statement:
3

# ----------------------------------------------  5.1 Domain
DOMAIN
5 6 2 0 0 2
# e/i|  i    j |_PB. _PB.|  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    1    0   -1    ## _PB_M-1 >= 0
   1   -1    1    0    0    0    ## -i+j >= 0
   1    0   -1    1    0   -1    ## -j+_PB_M-1 >= 0

# ----------------------------------------------  5.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  5.3 Access
WRITE
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    9    ## Arr == cov
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

# ----------------------------------------------  5.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
cov[i][j] = SCALAR_VAL(0.0);
</body>

# =============================================== Statement 6
# Number of relations describing the statement:
5

# ----------------------------------------------  6.1 Domain
DOMAIN
8 7 3 0 0 2
# e/i|  i    j    k |_PB. _PB.|  1  
   1    1    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    0    1    0   -1    ## _PB_M-1 >= 0
   1   -1    1    0    0    0    0    ## -i+j >= 0
   1    0   -1    0    1    0   -1    ## -j+_PB_M-1 >= 0
   1    0    0    1    0    0    0    ## k >= 0
   1    0    0   -1    0    1   -1    ## -k+_PB_N-1 >= 0
   1    0    0    0    0    1   -1    ## _PB_N-1 >= 0

# ----------------------------------------------  6.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  6.3 Access
WRITE
2 9 2 3 0 2
# e/i| Arr  [1]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0   11    ## Arr == scr_data
   0    0   -1    0    0    1    0    0    0    ## [1] == k

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    7    ## Arr == data
   0    0   -1    0    0    0    1    0    0    0    ## [1] == k
   0    0    0   -1    1    0    0    0    0    0    ## [2] == i

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    7    ## Arr == data
   0    0   -1    0    0    0    1    0    0    0    ## [1] == k
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

# ----------------------------------------------  6.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
scr_data[k] = data[k][i] * data[k][j];
</body>

# =============================================== Statement 7
# Number of relations describing the statement:
5

# ----------------------------------------------  7.1 Domain
DOMAIN
8 7 3 0 0 2
# e/i|  i    j    k |_PB. _PB.|  1  
   1    1    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    0    1    0   -1    ## _PB_M-1 >= 0
   1   -1    1    0    0    0    0    ## -i+j >= 0
   1    0   -1    0    1    0   -1    ## -j+_PB_M-1 >= 0
   1    0    0    1    0    0    0    ## k >= 0
   1    0    0   -1    0    1   -1    ## -k+_PB_N-1 >= 0
   1    0    0    0    0    1   -1    ## _PB_N-1 >= 0

# ----------------------------------------------  7.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    1    ## c7 == 1

# ----------------------------------------------  7.3 Access
READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    9    ## Arr == cov
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

WRITE
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    9    ## Arr == cov
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

READ
2 9 2 3 0 2
# e/i| Arr  [1]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0   11    ## Arr == scr_data
   0    0   -1    0    0    1    0    0    0    ## [1] == k

# ----------------------------------------------  7.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
cov[i][j] += scr_data[k];
</body>

# =============================================== Statement 8
# Number of relations describing the statement:
5

# ----------------------------------------------  8.1 Domain
DOMAIN
5 6 2 0 0 2
# e/i|  i    j |_PB. _PB.|  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    1    0   -1    ## _PB_M-1 >= 0
   1   -1    1    0    0    0    ## -i+j >= 0
   1    0   -1    1    0   -1    ## -j+_PB_M-1 >= 0

# ----------------------------------------------  8.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    2    ## c5 == 2

# ----------------------------------------------  8.3 Access
READ
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    9    ## Arr == cov
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

WRITE
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    9    ## Arr == cov
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

READ
1 7 1 2 0 2
# e/i| Arr|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    8    ## Arr == float_n

# ----------------------------------------------  8.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
cov[i][j] /= (float_n - SCALAR_VAL(1.0));
</body>

# =============================================== Statement 9
# Number of relations describing the statement:
4

# ----------------------------------------------  9.1 Domain
DOMAIN
5 6 2 0 0 2
# e/i|  i    j |_PB. _PB.|  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    1    0   -1    ## _PB_M-1 >= 0
   1   -1    1    0    0    0    ## -i+j >= 0
   1    0   -1    1    0   -1    ## -j+_PB_M-1 >= 0

# ----------------------------------------------  9.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    3    ## c5 == 3

# ----------------------------------------------  9.3 Access
WRITE
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    9    ## Arr == cov
   0    0   -1    0    0    1    0    0    0    ## [1] == j
   0    0    0   -1    1    0    0    0    0    ## [2] == i

READ
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    9    ## Arr == cov
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0   t6 {loop with stmts: S6, S7, }
t5 {loop with stmts: S6, S7, }
t4 {loop with stmts: S6, S7, }
 0   -1    0    1    0    0    0    ## [2] == j

# ----------------------------------------------  9.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
cov[j][i] = cov[i][j];
</body>

# =============================================== Extensions
<scatnames>
b0 i b1 j b2 k b3
</scatnames>

<arrays>
# Number of arrays
11
# Mapping array-identifiers/array-names
1 j
2 _PB_M
3 mean
4 SCALAR_VAL
5 i
6 _PB_N
7 data
8 float_n
9 cov
10 k
11 scr_data
</arrays>

<coordinates>
# File name
(null)
# Starting line and column
63 0
# Ending line and column
84 0
# Indentation
2
</coordinates>

</OpenScop>

[pluto] compute_deps (isl)
[pluto] Number of statements: 9
[pluto] Total number of loops: 18
[pluto] Number of deps: 41
[pluto] Maximum domain dimensionality: 3
[pluto] Number of parameters: 2
[pluto] Diamond tiling not possible/useful
[pluto] Affine transformations [<iter coeff's> <param> <const>]

T(S1): (1, j, 0, 0, 8)
loop types (scalar, loop, scalar, scalar, scalar)

T(S2): (2, j, i, 0, 7)
loop types (scalar, loop, loop, scalar, scalar)

T(S3): (3, j, 0, 0, 6)
loop types (scalar, loop, scalar, scalar, scalar)

T(S4): (4, i, j, 0, 5)
loop types (scalar, loop, loop, scalar, scalar)

T(S5): (0, i, j, 0, 4)
loop types (scalar, loop, loop, scalar, scalar)

T(S6): (5, k, i, j, 2)
loop types (scalar, loop, loop, loop, scalar)

T(S7): (5, k, i, j, 3)
loop types (scalar, loop, loop, loop, scalar)

T(S8): (6, i, j, 0, 0)
loop types (scalar, loop, loop, scalar, scalar)

T(S9): (6, i, j, 0, 1)
loop types (scalar, loop, loop, scalar, scalar)

[Pluto] After tiling:
T(S1): (1, j/32, j, 0, 0, 8, 0)
loop types (scalar, loop, loop, scalar, scalar, scalar, scalar)

T(S2): (2, j/32, i/32, j, i, 0, 7)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S3): (3, j/32, j, 0, 0, 6, 0)
loop types (scalar, loop, loop, scalar, scalar, scalar, scalar)

T(S4): (4, i/32, j/32, i, j, 0, 5)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S5): (0, i/32, j/32, i, j, 0, 4)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S6): (5, k/32, i/32, k, i, j, 2)
loop types (scalar, loop, loop, loop, loop, loop, scalar)

T(S7): (5, k/32, i/32, k, i, j, 3)
loop types (scalar, loop, loop, loop, loop, loop, scalar)

T(S8): (6, i/32, j/32, i, j, 0, 0)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S9): (6, i/32, j/32, i, j, 0, 1)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

[Pluto] After intra-tile optimize
T(S1): (1, j/32, j, 0, 0, 8, 0)
loop types (scalar, loop, loop, scalar, scalar, scalar, scalar)

T(S2): (2, j/32, i/32, i, j, 0, 7)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S3): (3, j/32, j, 0, 0, 6, 0)
loop types (scalar, loop, loop, scalar, scalar, scalar, scalar)

T(S4): (4, i/32, j/32, i, j, 0, 5)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S5): (0, i/32, j/32, i, j, 0, 4)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S6): (5, k/32, i/32, k, i, j, 2)
loop types (scalar, loop, loop, loop, loop, loop, scalar)

T(S7): (5, k/32, i/32, k, i, j, 3)
loop types (scalar, loop, loop, loop, loop, loop, scalar)

T(S8): (6, i/32, j/32, i, j, 0, 0)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

T(S9): (6, i/32, j/32, i, j, 0, 1)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

[pluto] using statement-wise -fs/-ls options: S1(3,7), S2(4,7), S3(3,7), S4(4,7), S5(4,7), S6(4,7), S7(4,7), S8(4,7), S9(4,7), 
[Pluto] Output written to covariance.split.pluto.c

[pluto] Timing statistics
[pluto] SCoP extraction + dependence analysis time: 0.004110s
[pluto] Auto-transformation time: 0.052949s
[pluto] 		Total constraint solving time (LP/MIP/ILP) time: 0.004900s
[pluto] Code generation time: 0.029919s
[pluto] Other/Misc time: 0.219707s
[pluto] Total time: 0.306685s
[pluto] All times: 0.004110 0.052949 0.029919 0.219707
