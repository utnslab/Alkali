# [File generated by the OpenScop Library 0.9.2]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 7 0 0 0 5

# Parameters are provided
1
<strings>
_PB_NI _PB_NJ _PB_NK _PB_NL _PB_NM
</strings>

# Number of statements
9

# =============================================== Statement 1
# Number of relations describing the statement:
3

# ----------------------------------------------  1.1 Domain
DOMAIN
6 9 2 0 0 5
# e/i|  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    1    0    0    0    0   -1    ## -i+_PB_NI-1 >= 0
   1    0    0    1    0    0    0    0   -1    ## _PB_NI-1 >= 0
   1    0    1    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    1    0    0    0   -1    ## -j+_PB_NJ-1 >= 0
   1    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
5 14 5 2 0 5
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  1.3 Access
WRITE
3 12 3 2 0 5
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    5    ## Arr == E
   0    0   -1    0    1    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    ## [2] == j

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
E[i][j] = SCALAR_VAL(0.0);
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
5

# ----------------------------------------------  2.1 Domain
DOMAIN
9 10 3 0 0 5
# e/i|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0    0    0    0   -1    ## -i+_PB_NI-1 >= 0
   1    0    0    0    1    0    0    0    0   -1    ## _PB_NI-1 >= 0
   1    0    1    0    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    1    0    0    0   -1    ## -j+_PB_NJ-1 >= 0
   1    0    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0
   1    0    0    1    0    0    0    0    0    0    ## k >= 0
   1    0    0   -1    0    0    1    0    0   -1    ## -k+_PB_NK-1 >= 0
   1    0    0    0    0    0    1    0    0   -1    ## _PB_NK-1 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
7 17 7 3 0 5
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  2.3 Access
WRITE
2 12 2 3 0 5
# e/i| Arr  [1]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    9    ## Arr == S
   0    0   -1    0    0    1    0    0    0    0    0    0    ## [1] == k

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   10    ## Arr == A
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    0    0    0    ## [2] == k

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   11    ## Arr == B
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## [1] == k
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
S[k] = A[i][k] * B[k][j];
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
5

# ----------------------------------------------  3.1 Domain
DOMAIN
9 10 3 0 0 5
# e/i|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0    0    0    0   -1    ## -i+_PB_NI-1 >= 0
   1    0    0    0    1    0    0    0    0   -1    ## _PB_NI-1 >= 0
   1    0    1    0    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    1    0    0    0   -1    ## -j+_PB_NJ-1 >= 0
   1    0    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0
   1    0    0    1    0    0    0    0    0    0    ## k >= 0
   1    0    0   -1    0    0    1    0    0   -1    ## -k+_PB_NK-1 >= 0
   1    0    0    0    0    0    1    0    0   -1    ## _PB_NK-1 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
7 17 7 3 0 5
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    1    ## c7 == 1

# ----------------------------------------------  3.3 Access
READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    5    ## Arr == E
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

WRITE
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    5    ## Arr == E
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

READ
2 12 2 3 0 5
# e/i| Arr  [1]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    9    ## Arr == S
   0    0   -1    0    0    1    0    0    0    0    0    0    ## [1] == k

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
E[i][j] += S[k];
</body>

# =============================================== Statement 4
# Number of relations describing the statement:
3

# ----------------------------------------------  4.1 Domain
DOMAIN
6 9 2 0 0 5
# e/i|  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0    0    0   -1    ## -i+_PB_NJ-1 >= 0
   1    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0
   1    0    1    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    0    1    0   -1    ## -j+_PB_NL-1 >= 0
   1    0    0    0    0    0    1    0   -1    ## _PB_NL-1 >= 0

# ----------------------------------------------  4.2 Scattering
SCATTERING
5 14 5 2 0 5
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    1    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  4.3 Access
WRITE
3 12 3 2 0 5
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0   13    ## Arr == F
   0    0   -1    0    1    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    ## [2] == j

# ----------------------------------------------  4.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
F[i][j] = SCALAR_VAL(0.0);
</body>

# =============================================== Statement 5
# Number of relations describing the statement:
5

# ----------------------------------------------  5.1 Domain
DOMAIN
9 10 3 0 0 5
# e/i|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    0    1    0    0    0   -1    ## -i+_PB_NJ-1 >= 0
   1    0    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0
   1    0    1    0    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    0    0    1    0   -1    ## -j+_PB_NL-1 >= 0
   1    0    0    0    0    0    0    1    0   -1    ## _PB_NL-1 >= 0
   1    0    0    1    0    0    0    0    0    0    ## k >= 0
   1    0    0   -1    0    0    0    0    1   -1    ## -k+_PB_NM-1 >= 0
   1    0    0    0    0    0    0    0    1   -1    ## _PB_NM-1 >= 0

# ----------------------------------------------  5.2 Scattering
SCATTERING
7 17 7 3 0 5
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  5.3 Access
WRITE
2 12 2 3 0 5
# e/i| Arr  [1]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    9    ## Arr == S
   0    0   -1    0    0    1    0    0    0    0    0    0    ## [1] == k

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   15    ## Arr == C
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    0    0    0    ## [2] == k

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   16    ## Arr == D
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## [1] == k
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

# ----------------------------------------------  5.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
S[k] = C[i][k] * D[k][j];
</body>

# =============================================== Statement 6
# Number of relations describing the statement:
5

# ----------------------------------------------  6.1 Domain
DOMAIN
9 10 3 0 0 5
# e/i|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    0    1    0    0    0   -1    ## -i+_PB_NJ-1 >= 0
   1    0    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0
   1    0    1    0    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    0    0    1    0   -1    ## -j+_PB_NL-1 >= 0
   1    0    0    0    0    0    0    1    0   -1    ## _PB_NL-1 >= 0
   1    0    0    1    0    0    0    0    0    0    ## k >= 0
   1    0    0   -1    0    0    0    0    1   -1    ## -k+_PB_NM-1 >= 0
   1    0    0    0    0    0    0    0    1   -1    ## _PB_NM-1 >= 0

# ----------------------------------------------  6.2 Scattering
SCATTERING
7 17 7 3 0 5
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    1    ## c7 == 1

# ----------------------------------------------  6.3 Access
READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   13    ## Arr == F
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

WRITE
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   13    ## Arr == F
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

READ
2 12 2 3 0 5
# e/i| Arr  [1]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    9    ## Arr == S
   0    0   -1    0    0    1    0    0    0    0    0    0    ## [1] == k

# ----------------------------------------------  6.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
F[i][j] += S[k];
</body>

# =============================================== Statement 7
# Number of relations describing the statement:
3

# ----------------------------------------------  7.1 Domain
DOMAIN
6 9 2 0 0 5
# e/i|  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    1    0    0    0    0   -1    ## -i+_PB_NI-1 >= 0
   1    0    0    1    0    0    0    0   -1    ## _PB_NI-1 >= 0
   1    0    1    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    0    1    0   -1    ## -j+_PB_NL-1 >= 0
   1    0    0    0    0    0    1    0   -1    ## _PB_NL-1 >= 0

# ----------------------------------------------  7.2 Scattering
SCATTERING
5 14 5 2 0 5
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    1    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  7.3 Access
WRITE
3 12 3 2 0 5
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0   17    ## Arr == G
   0    0   -1    0    1    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    ## [2] == j

# ----------------------------------------------  7.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
G[i][j] = SCALAR_VAL(0.0);
</body>

# =============================================== Statement 8
# Number of relations describing the statement:
5

# ----------------------------------------------  8.1 Domain
DOMAIN
9 10 3 0 0 5
# e/i|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0    0    0    0   -1    ## -i+_PB_NI-1 >= 0
   1    0    0    0    1    0    0    0    0   -1    ## _PB_NI-1 >= 0
   1    0    1    0    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    0    0    1    0   -1    ## -j+_PB_NL-1 >= 0
   1    0    0    0    0    0    0    1    0   -1    ## _PB_NL-1 >= 0
   1    0    0    1    0    0    0    0    0    0    ## k >= 0
   1    0    0   -1    0    1    0    0    0   -1    ## -k+_PB_NJ-1 >= 0
   1    0    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0

# ----------------------------------------------  8.2 Scattering
SCATTERING
7 17 7 3 0 5
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  8.3 Access
WRITE
2 12 2 3 0 5
# e/i| Arr  [1]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    9    ## Arr == S
   0    0   -1    0    0    1    0    0    0    0    0    0    ## [1] == k

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    5    ## Arr == E
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    0    0    0    ## [2] == k

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   13    ## Arr == F
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## [1] == k
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

# ----------------------------------------------  8.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
S[k] = E[i][k] * F[k][j];
</body>

# =============================================== Statement 9
# Number of relations describing the statement:
6

# ----------------------------------------------  9.1 Domain
DOMAIN
9 10 3 0 0 5
# e/i|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   1    1    0    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0    0    0    0   -1    ## -i+_PB_NI-1 >= 0
   1    0    0    0    1    0    0    0    0   -1    ## _PB_NI-1 >= 0
   1    0    1    0    0    0    0    0    0    0    ## j >= 0
   1    0   -1    0    0    0    0    1    0   -1    ## -j+_PB_NL-1 >= 0
   1    0    0    0    0    0    0    1    0   -1    ## _PB_NL-1 >= 0
   1    0    0    1    0    0    0    0    0    0    ## k >= 0
   1    0    0   -1    0    1    0    0    0   -1    ## -k+_PB_NJ-1 >= 0
   1    0    0    0    0    1    0    0    0   -1    ## _PB_NJ-1 >= 0

# ----------------------------------------------  9.2 Scattering
SCATTERING
7 17 7 3 0 5
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    2    ## c1 == 2
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    1    ## c7 == 1

# ----------------------------------------------  9.3 Access
READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   17    ## Arr == G
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

WRITE
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   17    ## Arr == G
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    5    ## Arr == E
   0    0   -1    0    1    0    0    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    0    0    0    ## [2] == k

READ
3 13 3 3 0 5
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB. _PB. _PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0   13    ## Arr == F
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## [1] == k
   0    0    0   -1    0    1    0    0    0    0    0    0    0    ## [2] == j

# ----------------------------------------------  9.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
G[i][j] += E[i][k] * F[k][j];
</body>

# =============================================== Extensions
<scatnames>
b0 i b1 j b2 k b3
</scatnames>

<arrays>
# Number of arrays
17
# Mapping array-identifiers/array-names
1 i
2 _PB_NI
3 j
4 _PB_NJ
5 E
6 SCALAR_VAL
7 k
8 _PB_NK
9 S
10 A
11 B
12 _PB_NL
13 F
14 _PB_NM
15 C
16 D
17 G
</arrays>

<coordinates>
# File name
(null)
# Starting line and column
86 0
# Ending line and column
113 0
# Indentation
2
</coordinates>

</OpenScop>

[pluto] compute_deps (isl)
[pluto] Number of statements: 9
[pluto] Total number of loops: 24
[pluto] Number of deps: 46
[pluto] Maximum domain dimensionality: 3
[pluto] Number of parameters: 5
[pluto] Diamond tiling not possible/useful
[pluto] Affine transformations [<iter coeff's> <param> <const>]

T(S1): (0, 1, i, 1, j, 0, 8)
loop types (scalar, scalar, loop, scalar, loop, scalar, scalar)

T(S2): (1, 0, k, 0, i, j, 6)
loopt9 {loop with stmts: S2, S3, }
t8 {loop with stmts: S2, S3, }
t9 {loop with stmts: S5, S6, }
t8 {loop with stmts: S5, S6, }
t6 {loop with stmts: S2, S3, S5, S6, }
t9 {loop with stmts: S8, S9, }
t8 {loop with stmts: S8, S9, }
t6 {loop with stmts: S8, S9, }
t6 {loop with stmts: S8, S9, }
 types (scalar, scalar, loop, scalar, loop, loop, scalar)

T(S3): (1, 0, k, 0, i, j, 7)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar)

T(S4): (0, 0, i, 0, j, 0, 5)
loop types (scalar, scalar, loop, scalar, loop, scalar, scalar)

T(S5): (1, 0, k, 1, i, j, 3)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar)

T(S6): (1, 0, k, 1, i, j, 4)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar)

T(S7): (0, 0, i, 0, j, 0, 2)
loop types (scalar, scalar, loop, scalar, loop, scalar, scalar)

T(S8): (1, 1, k, 0, i, j, 1)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar)

T(S9): (1, 1, i, 0, j, k, 0)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar)

[Pluto] After tiling:
T(S1): (0, 1, i/32, 1, j/32, i, 1, j, 0, 8)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S2): (1, 0, k/32, 0, i/32, k, 0, i, j, 6)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S3): (1, 0, k/32, 0, i/32, k, 0, i, j, 7)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S4): (0, 0, i/32, 0, j/32, i, 0, j, 0, 5)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S5): (1, 0, k/32, 1, i/32, k, 1, i, j, 3)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S6): (1, 0, k/32, 1, i/32, k, 1, i, j, 4)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S7): (0, 0, i/32, 0, j/32, i, 0, j, 0, 2)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S8): (1, 1, k/32, 0, i/32, k, 0, i, j, 1)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S9): (1, 1, i/32, 0, j/32, i, 0, j, k, 0)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

[Pluto] After intra-tile optimize
T(S1): (0, 1, i/32, 1, j/32, i, 1, j, 0, 8)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S2): (1, 0, k/32, 0, i/32, k, 0, i, j, 6)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S3): (1, 0, k/32, 0, i/32, k, 0, i, j, 7)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S4): (0, 0, i/32, 0, j/32, i, 0, j, 0, 5)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S5): (1, 0, k/32, 1, i/32, k, 1, i, j, 3)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S6): (1, 0, k/32, 1, i/32, k, 1, i, j, 4)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S7): (0, 0, i/32, 0, j/32, i, 0, j, 0, 2)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S8): (1, 1, k/32, 0, i/32, 0, i, j, k, 1)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S9): (1, 1, i/32, 0, j/32, 0, j, k, i, 0)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

[Pluto] After tile scheduling:
T(S1): (0, 1, i/32, 1, j/32, i, 1, j, 0, 8)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S2): (1, 0, k/32+i/32, 0, i/32, k, 0, i, j, 6)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S3): (1, 0, k/32+i/32, 0, i/32, k, 0, i, j, 7)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S4): (0, 0, i/32, 0, j/32, i, 0, j, 0, 5)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S5): (1, 0, k/32+i/32, 1, i/32, k, 1, i, j, 3)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S6): (1, 0, k/32+i/32, 1, i/32, k, 1, i, j, 4)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S7): (0, 0, i/32, 0, j/32, i, 0, j, 0, 2)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, scalar, scalar)

T(S8): (1, 1, k/32, 0, i/32, 0, i, j, k, 1)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

T(S9): (1, 1, i/32, 0, j/32, 0, j, k, i, 0)
loop types (scalar, scalar, loop, scalar, loop, loop, scalar, loop, loop, scalar)

[pluto] using statement-wise -fs/-ls options: S1(6,10), S2(6,10), S3(6,10), S4(6,10), S5(6,10), S6(6,10), S7(6,10), S8(6,10), S9(6,10), 
[Pluto] Output written to 3mm.split.pluto.c

[pluto] Timing statistics
[pluto] SCoP extraction + dependence analysis time: 0.005530s
[pluto] Auto-transformation time: 0.152623s
[pluto] 		Total constraint solving time (LP/MIP/ILP) time: 0.011560s
[pluto] Code generation time: 0.885578s
[pluto] Other/Misc time: 0.497012s
[pluto] Total time: 1.540743s
[pluto] All times: 0.005530 0.152623 0.885578 0.497012
