# [File generated by the OpenScop Library 0.9.2]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 4 0 0 0 2

# Parameters are provided
1
<strings>
_PB_M _PB_N
</strings>

# Number of statements
3

# =============================================== Statement 1
# Number of relations describing the statement:
5

# ----------------------------------------------  1.1 Domain
DOMAIN
9 7 3 0 0 2
# e/i|  i    j    k |_PB. _PB.|  1  
   1    1    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    0    1    0   -1    ## _PB_M-1 >= 0
   1    0    1    0    0    0    0    ## j >= 0
   1    0   -1    0    0    1   -1    ## -j+_PB_N-1 >= 0
   1    0    0    0    0    1   -1    ## _PB_N-1 >= 0
   1   -1    0    1    0    0   -1    ## -i+k-1 >= 0
   1    0    0   -1    1    0   -1    ## -k+_PB_M-1 >= 0
   1   -1    0    0    1    0   -2    ## -i+_PB_M-2 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c5 == 0
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  1.3 Access
WRITE
2 9 2 3 0 2
# e/i| Arr  [1]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    6    ## Arr == S
   0    0   -1    0    0    1    0    0    0    ## [1] == k

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    7    ## Arr == A
   0    0   -1    0    0    0    1    0    0    0    ## [1] == k
   0    0    0   -1    1    0    0    0    0    0    ## [2] == i

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    8    ## Arr == B
   0    0   -1    0    0    0    1    0    0    0    ## [1] == k
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
S[k] = A[k][i] * B[k][j];
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
5

# ----------------------------------------------  2.1 Domain
DOMAIN
9 7 3 0 0 2
# e/i|  i    j    k |_PB. _PB.|  1  
   1    1    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    0    1    0   -1    ## _PB_M-1 >= 0
   1    0    1    0    0    0    0    ## j >= 0
   1    0   -1    0    0    1   -1    ## -j+_PB_N-1 >= 0
   1    0    0    0    0    1   -1    ## _PB_N-1 >= 0
   1   -1    0    1    0    0   -1    ## -i+k-1 >= 0
   1    0    0   -1    1    0   -1    ## -k+_PB_M-1 >= 0
   1   -1    0    0    1    0   -2    ## -i+_PB_M-2 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c5 == 0
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    1    ## c7 == 1

# ----------------------------------------------  2.3 Access
READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    8    ## Arr == B
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

WRITE
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    8    ## Arr == B
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

READ
2 9 2 3 0 2
# e/i| Arr  [1]|  i    j    k |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    6    ## Arr == S
   0    0   -1    0    0    1    0    0    0    ## [1] == k

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
B[i][j] += S[k];
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
5

# ----------------------------------------------  3.1 Domain
DOMAIN
6 6 2 0 0 2
# e/i|  i    j |_PB. _PB.|  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    1    0   -1    ## -i+_PB_M-1 >= 0
   1    0    0    1    0   -1    ## _PB_M-1 >= 0
   1    0    1    0    0    0    ## j >= 0
   1    0   -1    0    1   -1    ## -j+_PB_N-1 >= 0
   1    0    0    0    1   -1    ## _PB_N-1 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    1    ## c5 == 1

# ----------------------------------------------  3.3 Access
WRITE
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    8    ## Arr == B
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

READ
1 7 1 2 0 2
# e/i| Arr|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    9    ## Arr == alpha

READ
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |_PB. _PB.|  1  
   0   -1    0    0    0    0    0    0    8    ## Arr == B
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
B[i][j] = alpha * B[i][j];
</body>

# =============================================== Extensions
<scatnames>
b0 i b1 j b2 k b3
</scatnames>

<arrays>
# Number of arrays
9
# Mapping array-identifiers/array-names
1 i
2 _PB_M
3 j
4 _PB_N
5 k
6 S
7 A
8 B
9 alpha
</arrays>

<coordinates>
# File name
(null)
# Starting line and column
75 0
# Ending line and column
83 0
# Indentation
2
</coordinates>

</OpenScop>

[pluto] compute_deps (isl)
[pluto] Number of statements: 3
[pluto] Total number of loops: 8
[pluto] Number of deps: 15
[pluto] Maximum domain dimensionality: 3
[pluto] Number of parameters: 2
[pluto] Diamond tiling not possible/useful
[pluto] Affine transformations [<iter coeff's> <param> <const>]

T(S1): (0, i, k, j, 1)
loop types (scalar, loop, loop, loop, scalar)

T(S2): (0, i, k, j, 2)
loop types (scalar, loop, loop, loop, scalar)

T(S3): (1, i, j, 0, 0)
loop types (scalar, loop, loop, scalar, scalar)

[Pluto] After tiling:
T(S1): (0, i/32, k/32, i, k, j, 1)
loop types (scalar, loop, loop, loop, loop, loop, scalar)

T(S2): (0, i/32, k/32, i, k, j, 2)
loop types (t6 {loop with stmts: S1, S2, }
t5 {loop with stmts: S1, S2, }
t4 {loop with stmts: S1, S2, }
scalar, loop, loop, loop, loop, loop, scalar)

T(S3): (1, i/32, j/32, i, j, 0, 0)
loop types (scalar, loop, loop, loop, loop, scalar, scalar)

[pluto] using statement-wise -fs/-ls options: S1(4,7), S2(4,7), S3(4,7), 
[Pluto] Output written to trmm.split.pluto.c

[pluto] Timing statistics
[pluto] SCoP extraction + dependence analysis time: 0.002082s
[pluto] Auto-transformation time: 0.012549s
[pluto] 		Total constraint solving time (LP/MIP/ILP) time: 0.001605s
[pluto] Code generation time: 0.011946s
[pluto] Other/Misc time: 0.064059s
[pluto] Total time: 0.090636s
[pluto] All times: 0.002082 0.012549 0.011946 0.064059
