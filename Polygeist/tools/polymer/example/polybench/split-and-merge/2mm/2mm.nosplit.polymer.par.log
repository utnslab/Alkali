Pluto schedule elapsed time: 1.543927e-01s
# [File generated by the OpenScop Library 0.9.2]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 6 0 0 0 4

# Parameters are provided
1
<strings>
P0 P1 P2 P3
</strings>

# Number of statements
4

# =============================================== Statement 1
# Number of relations describing the statement:
3

# ----------------------------------------------  1.1 Domain
DOMAIN
9 10 4 0 0 4
# e/i| fk0  fk1  i0   i1 | P0   P1   P2   P3 |  1  
   1    0    0    1    0    0    0    0    0    0    ## i0 >= 0
   1    0    0   -1    0    1    0    0    0   -1    ## -i0+P0-1 >= 0
   1    0    0    0    1    0    0    0    0    0    ## i1 >= 0
   1    0    0    0   -1    0    1    0    0   -1    ## -i1+P1-1 >= 0
   0    0    0    0    0    0    0    0    0    0    ## 0 == 0
   1  -32    0    1    0    0    0    0    0    0    ## -32*fk0+i0 >= 0
   1   32    0   -1    0    0    0    0    0   31    ## 32*fk0-i0+31 >= 0
   1    0  -32    0    1    0    0    0    0    0    ## -32*fk1+i1 >= 0
   1    0   32    0   -1    0    0    0    0   31    ## 32*fk1-i1+31 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
9 19 9 4 0 4
# e/i| c1   c2   c3   c4   c5   c6   c7   c8   c9 | fk0  fk1  i0   i1 | P0   P1   P2   P3 |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == fk0
   0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    ## c3 == fk1
   0    0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    ## c4 == i0
   0    0    0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    ## c5 == i1
   0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    1    ## c6 == 1
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    ## c7 == 0
   0    0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c8 == 0
   0    0    0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    ## c9 == 0

# ----------------------------------------------  1.3 Access
WRITE
3 13 3 4 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  i0   i1 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    1    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    1    ## Arr == A1

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
4
# List of original iterators
fk0 fk1 i0 i1
# Statement body expression
S0(i0, i1)
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
6

# ----------------------------------------------  2.1 Domain
DOMAIN
12 12 6 0 0 4
# e/i| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   1    0    0    0    1    0    0    0    0    0    0    0    ## i0 >= 0
   1    0    0    0   -1    0    0    1    0    0    0   -1    ## -i0+P0-1 >= 0
   1    0    0    0    0    1    0    0    0    0    0    0    ## i1 >= 0
   1    0    0    0    0   -1    0    0    1    0    0   -1    ## -i1+P1-1 >= 0
   1    0    0    0    0    0    1    0    0    0    0    0    ## i2 >= 0
   1    0    0    0    0    0   -1    0    0    1    0   -1    ## -i2+P2-1 >= 0
   1  -32    0    0    1    0    0    0    0    0    0    0    ## -32*fk0+i0 >= 0
   1   32    0    0   -1    0    0    0    0    0    0   31    ## 32*fk0-i0+31 >= 0
   1    0  -32    0    0    1    0    0    0    0    0    0    ## -32*fk1+i1 >= 0
   1    0   32    0    0   -1    0    0    0    0    0   31    ## 32*fk1-i1+31 >= 0
   1    0    0  -32    0    0    1    0    0    0    0    0    ## -32*fk2+i2 >= 0
   1    0    0   32    0    0   -1    0    0    0    0   31    ## 32*fk2-i2+31 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
9 21 9 6 0 4
# e/i| c1   c2   c3   c4   c5   c6   c7   c8   c9 | fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    0    0    ## c2 == fk0
   0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    0    ## c3 == fk1
   0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c4 == 0
   0    0    0    0    0   -1    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c5 == fk2
   0    0    0    0    0    0   -1    0    0    0    0    0    0    1    0    0    0    0    0    0    0    ## c6 == i0
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c7 == 0
   0    0    0    0    0    0    0    0   -1    0    0    0    0    0    0    1    0    0    0    0    0    ## c8 == i2
   0    0    0    0    0    0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## c9 == i1

# ----------------------------------------------  2.3 Access
READ
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    1    ## Arr == A1

READ
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## [2] == i2
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    2    ## Arr == A2

READ
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    0    0    1    0    0    0    0    0    ## [1] == i2
   0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    3    ## Arr == A3

WRITE
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    1    ## Arr == A1

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
6
# List of original iterators
fk0 fk1 fk2 i0 i1 i2
# Statement body expression
S1(i0, i1, i2)
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
4

# ----------------------------------------------  3.1 Domain
DOMAIN
9 10 4 0 0 4
# e/i| fk0  fk1  i0   i1 | P0   P1   P2   P3 |  1  
   1    0    0    1    0    0    0    0    0    0    ## i0 >= 0
   1    0    0   -1    0    1    0    0    0   -1    ## -i0+P0-1 >= 0
   1    0    0    0    1    0    0    0    0    0    ## i1 >= 0
   1    0    0    0   -1    0    0    0    1   -1    ## -i1+P3-1 >= 0
   0    0    0    0    0    0    0    0    0    0    ## 0 == 0
   1  -32    0    1    0    0    0    0    0    0    ## -32*fk0+i0 >= 0
   1   32    0   -1    0    0    0    0    0   31    ## 32*fk0-i0+31 >= 0
   1    0  -32    0    1    0    0    0    0    0    ## -32*fk1+i1 >= 0
   1    0   32    0   -1    0    0    0    0   31    ## 32*fk1-i1+31 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
9 19 9 4 0 4
# e/i| c1   c2   c3   c4   c5   c6   c7   c8   c9 | fk0  fk1  i0   i1 | P0   P1   P2   P3 |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c2 == fk0
   0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    ## c3 == fk1
   0    0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    ## c4 == i0
   0    0    0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    ## c5 == i1
   0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c6 == 0
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    ## c7 == 0
   0    0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c8 == 0
   0    0    0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    ## c9 == 0

# ----------------------------------------------  3.3 Access
READ
3 13 3 4 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  i0   i1 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    1    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    4    ## Arr == A4

WRITE
3 13 3 4 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  i0   i1 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    1    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    4    ## Arr == A4

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
4
# List of original iterators
fk0 fk1 i0 i1
# Statement body expression
S2(i0, i1)
</body>

# =============================================== Statement 4
# Number of relations describing the statement:
6

# ----------------------------------------------  4.1 Domain
DOMAIN
12 12 6 0 0 4
# e/i| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   1    0    0    0    1    0    0    0    0    0    0    0    ## i0 >= 0
   1    0    0    0   -1    0    0    1    0    0    0   -1    ## -i0+P0-1 >= 0
   1    0    0    0    0    1    0    0    0    0    0    0    ## i1 >= 0
   1    0    0    0    0   -1    0    0    0    0    1   -1    ## -i1+P3-1 >= 0
   1    0    0    0    0    0    1    0    0    0    0    0    ## i2 >= 0
   1    0    0    0    0    0   -1    0    1    0    0   -1    ## -i2+P1-1 >= 0
   1  -32    0    0    1    0    0    0    0    0    0    0    ## -32*fk0+i0 >= 0
   1   32    0    0   -1    0    0    0    0    0    0   31    ## 32*fk0-i0+31 >= 0
   1    0  -32    0    0    0    1    0    0    0    0    0    ## -32*fk1+i2 >= 0
   1    0   32    0    0    0   -1    0    0    0    0   31    ## 32*fk1-i2+31 >= 0
   1    0    0  -32    0    1    0    0    0    0    0    0    ## -32*fk2+i1 >= 0
   1    0    0   32    0   -1    0    0    0    0    0   31    ## 32*fk2-i1+31 >= 0

# ----------------------------------------------  4.2 Scattering
SCATTERING
9 21 9 6 0 4
# e/i| c1   c2   c3   c4   c5   c6   c7   c8   c9 | fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    0    0    ## c2 == fk0
   0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    0    ## c3 == fk1
   0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1    ## c4 == 1
   0    0    0    0    0   -1    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c5 == fk2
   0    0    0    0    0    0   -1    0    0    0    0    0    0    1    0    0    0    0    0    0    0    ## c6 == i0
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    1    0    0    0    0    0    ## c7 == i2
   0    0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    1    ## c8 == 1
   0    0    0    0    0    0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## c9 == i1

# ----------------------------------------------  4.3 Access
READ
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    4    ## Arr == A4

READ
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## [2] == i2
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    1    ## Arr == A1

READ
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    0    0    1    0    0    0    0    0    ## [1] == i2
   0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    5    ## Arr == A5

WRITE
3 15 3 6 0 4
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1   P2   P3 |  1  
   0    0   -1    0    0    0    0    1    0    0    0    0    0    0    0    ## [1] == i0
   0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## [2] == i1
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    4    ## Arr == A4

# ----------------------------------------------  4.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
6
# List of original iterators
fk0 fk1 fk2 i0 i1 i2
# Statement body expression
S3(i0, i1, i2)
</body>

# =============================================== Extensions
<arrays>
# Number of arrays
5
# Mapping array-identifiers/array-names
1 A1
2 A2
3 A3
4 A4
5 A5
</arrays>

<comment>
kernel_2mm</comment>

<scatnames>
t1 t2 t3 t4 t5 t6 t7 t8 t9
</scatnames>

<loop>
# Number of loops
2
# ===========================================
# Loop number 1 
# Iterator name
t2
# Number of stmts
2
# Statement identifiers
1
3
# Private variables
t3,t4,t5,t6,t7,t8,t9
# Directive
1
# ===========================================
# Loop number 2 
# Iterator name
t2
# Number of stmts
2
# Statement identifiers
2
4
# Private variables
t3,t4,t5,t6,t7,t8,t9
# Directive
1
</loop>

</OpenScop>

[CLooG] INFO: 1 dimensions (over 9) are scalar.
if (P0 >= 1) {
  lbp=0;
  ubp=floord(P0-1,32);
#pragma omp parallel for private(lbv,ubv,t3,t4,t5,t6,t7,t8,t9)
  for (t2=lbp;t2<=ubp;t2++) {
    if ((P1 >= 0) && (P3 >= 0)) {
      for (t3=0;t3<=floord(P1+P3-1,32);t3++) {
        if (t3 <= min(floord(P1-1,32),floord(P3-1,32))) {
          for (t4=32*t2;t4<=min(P0-1,32*t2+31);t4++) {
            for (t5=32*t3;t5<=min(min(P1-1,P3-1),32*t3+31);t5++) {
              S2(t4, t5)
              S0(t4, t5)
            }
            for (t5=P3;t5<=min(P1-1,32*t3+31);t5++) {
              S0(t4, t5)
            }
            for (t5=P1;t5<=min(P3-1,32*t3+31);t5++) {
              S2(t4, t5)
            }
          }
        }
        if ((t3 <= floord(P1-1,32)) && (t3 >= ceild(P3,32))) {
          for (t4=32*t2;t4<=min(P0-1,32*t2+31);t4++) {
            for (t5=32*t3;t5<=min(P1-1,32*t3+31);t5++) {
              S0(t4, t5)
            }
          }
        }
        if ((t3 <= floord(P3-1,32)) && (t3 >= ceild(P1,32))) {
          for (t4=32*t2;t4<=min(P0-1,32*t2+31);t4++) {
            for (t5=32*t3;t5<=min(P3-1,32*t3+31);t5++) {
              S2(t4, t5)
            }
          }
        }
      }
    }
    if (P3 <= -1) {
      for (t3=0;t3<=floord(P1-1,32);t3++) {
        for (t4=32*t2;t4<=min(P0-1,32*t2+31);t4++) {
          for (t5=32*t3;t5<=min(P1-1,32*t3+31);t5++) {
            S0(t4, t5)
          }
        }
      }
    }
    if (P1 <= -1) {
      for (t3=0;t3<=floord(P3-1,32);t3++) {
        for (t4=32*t2;t4<=min(P0-1,32*t2+31);t4++) {
          for (t5=32*t3;t5<=min(P3-1,32*t3+31);t5++) {
            S2(t4, t5)
          }
        }
      }
    }
  }
  if (P1 >= 1) {
    lbp=0;
    ubp=floord(P0-1,32);
#pragma omp parallel for private(lbv,ubv,t3,t4,t5,t6,t7,t8,t9)
    for (t2=lbp;t2<=ubp;t2++) {
      for (t3=0;t3<=floord(P1-1,32);t3++) {
        if (P2 >= 1) {
          for (t5=0;t5<=floord(P2-1,32);t5++) {
            for (t6=32*t2;t6<=min(P0-1,32*t2+31);t6++) {
              for (t8=32*t5;t8<=min(P2-1,32*t5+31);t8++) {
                for (t9=32*t3;t9<=min(P1-1,32*t3+31);t9++) {
                  S1(t6, t9, t8)
                }
              }
            }
          }
        }
        if (P3 >= 1) {
          for (t5=0;t5<=floord(P3-1,32);t5++) {
            for (t6=32*t2;t6<=min(P0-1,32*t2+31);t6++) {
              for (t7=32*t3;t7<=min(P1-1,32*t3+31);t7++) {
                for (t9=32*t5;t9<=min(P3-1,32*t5+31);t9++) {
                  S3(t6, t9, t7)
                }
              }
            }
          }
        }
      }
    }
  }
}
===-------------------------------------------------------------------------===
                         ... Pass statistics report ...
===-------------------------------------------------------------------------===
'func' Pipeline
  {anonymous}::RegToMemPass
  {anonymous}::InsertRedundantLoadPass
{anonymous}::ExtractScopStmtPass
{anonymous}::PlutoTransformPass
Canonicalizer
Inliner
Canonicalizer

===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.2741 seconds

   ---User Time---   ---Wall Time---  --- Name ---
   0.0006 (  0.2%)     0.0003 (  0.1%)  'func' Pipeline
   0.0004 (  0.1%)     0.0002 (  0.1%)    {anonymous}::RegToMemPass
   0.0003 (  0.1%)     0.0001 (  0.1%)    {anonymous}::InsertRedundantLoadPass
   0.0003 (  0.1%)     0.0003 (  0.1%)  {anonymous}::ExtractScopStmtPass
   0.2684 ( 97.8%)     0.2684 ( 97.9%)  {anonymous}::PlutoTransformPass
   0.0010 (  0.4%)     0.0010 (  0.4%)  Canonicalizer
   0.0028 (  1.0%)     0.0028 (  1.0%)  Inliner
   0.0022 (  0.8%)     0.0022 (  0.8%)    'func' Pipeline
   0.0022 (  0.8%)     0.0022 (  0.8%)      Canonicalizer
   0.0000 (  0.0%)     0.0000 (  0.0%)    (A) CallGraph
   0.0013 (  0.5%)     0.0013 (  0.5%)  Canonicalizer
   0.2744 (100.0%)     0.2741 (100.0%)  Total
