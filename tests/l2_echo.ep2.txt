# Specify the functionality of the target archiecture


event NET_RECV {context ctx; buf packet;}
event NET_SEND{context ctx; buf packet;}

extern handler NET_SEND (context ctx, buf packet) {
}

############## main program ###########

struct eth_header_t {
    int a;
    bits<48> dst_mac;
    bits<48> src_mac;
    bits<16> ether_type;
}

# Totoal 24 bytes
struct ip_header_t {
    # Version (4),  IHL (4), DSCP (6), ECN(2)
    bits<8> misc; 
    bits<16> length;
    bits<16> identification;
    # Flags (3), Fragment Offset (13)
    bits<16> fragment_offset;
    
    # TTL (8), Transport Protocol (8)
    bits<16> TTL_transport;
    bits<16> checksum;
    bits<32> source_ip;
    bits<32> dst_ip;
    bits<32> options;
}

handler NET_RECV:process_packet (context ctx, buf packet) {
    eth_header_t eth_header;
    bits<48> tmp_mac;
    ip_header_t ip_header;

    packet.extract(eth_header);
    packet.extract(ip_header);

    tmp_mac = eth_header.src_mac;
    eth_header.src_mac = eth_header.dst_mac;
    eth_header.dst_mac = tmp_mac;
    
}