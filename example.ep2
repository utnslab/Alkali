struct Desc_Hdr {
    long    data_addr;
    int     size;
}

event DMA_READ_REQ {
    atom at;
    context ctx;
    long addr;
    int size;
}

event DMA_READ_CMPL {
    atom at;
    context ctx;
    buf buf;
}

# how to reorder, batch. diapatch event -- queue policy
controller DMA_READ_REQ() {
    # queue_length=100, batch=1, qos_class_num=10
    Queue(100, 1, 10);
}

controller DMA_READ_CMPL() {
    Queue(100, 1, 10);
}

extern handler DMA_READ_REQ(atom at, context ctx, long addr, int size) { 
    buf payload;
    generate DMA_READ_CMPL{at, ctx, payload};
}

handler DMA_READ_CMPL:receive_desc (context ctx, buf recv_buf) {
    Desc_Hdr desc;
    recv_buf.extract(desc); # Parse descriptor header
    ctx.desc_addr = desc.data_addr;
    ctx.desc_size = desc.size;

    # extern call - generate DMA_READ_CMPL, save call_tree, context
    generate DMA_READ_REQ:receive_payload_1 {ctx, desc.data_addr, 100}; 
}

handler DMA_READ_REQ:receive_payload_1 (context ctx, long addr, int size) {
    long addr2;
    addr2 = ctx.desc_addr;
    ctx.desc_addr = addr2 + addr;
}

